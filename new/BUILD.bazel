load("@makeheaders//rules:makeheaders.bzl", "makeheaders")
load("//config/cc:CONFIG.bzl",
     "BASE_COPTS",
     "BASE_LINKOPTS",
     "PROFILE",
     "define_module_version")

# load("BUILD.bzl", "curr_repo")

# LOCAL_REPO=repo_name()
## ERROR: repo_name not defined (v 7.0)
LOCAL_REPO=repository_name()[1:]   # "" or "coswitch~2.0.0" etc
# MODSTR=module_name()            # "coswitch"

# local_defines = [repository_name()[1:]]

# TOOLCHAINS = ["//:module_profiles"]

exports_files(["coswitch.c"])

##########
cc_binary(
    name  = "new",
    visibility = ["//visibility:public"],
    srcs  = [
        "coswitch.c",
        ":mkhdrs",
    ],
    deps = [
        "@cwalk//src:cwalk",
        "@findlibc//lib:findlibc",
        "@liblogc//lib:logc",
        "@libs7//lib:s7",
        "@opamc//lib:opamc",
        "@xdgc//lib:xdgc",
        "@gopt//lib:gopt",
        # "@semverc//src:semverc",
        # "@liblogc//lib:logc",
        "@uthash//lib:uthash",
        "//new/bazel"
    ],
    copts = BASE_COPTS + [
        # "-I$(@)/src",
        # "-I$(GENDIR)/$(@)/src",
        "-I$(GENDIR)/new",
        # "-I$(GENDIR)/$(@)/src/opam",
        # "-I$(GENDIR)/$(@)/test/opam",

        # "-I$(@libs7)/src",
        # "-I$(GENDIR)/$(@libs7)/src",

        # "-I$(GENDIR)/$(@findlibc)/lib",
        # # "-I$(@semverc)/src",
        # "-I$(@cwalk)/include",
        # "-I$(@gopt)/src",
    ],
    features = ["layering_check"],
    linkopts = BASE_LINKOPTS + [
        # "--verbose",
        # "-v",
    ],
    defines = PROFILE + select({
        ## for realpath
        "@platforms//os:linux": ["_XOPEN_SOURCE=500"],
        "//conditions:default": []
    }),
    local_defines = define_module_version() + [
        # "MODSTR=\\\"{}\\\"".format(MODSTR),
        "LOCAL_REPO=\\\"{}\\\"".format(LOCAL_REPO),
    ],
    linkstatic = 1,
    # toolchains = TOOLCHAINS,
)

########
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "coswitch.c",
    ],
    additional_srcs = [
        "//new/bazel:emit_build_bazel.c",
        "//new/bazel:emit_ocaml_repo.c",
        "//new/bazel:emit_pkg_bindir.c",
        "//new/bazel:registry.c",
        "//src/utils:utils.c",
        "@makeheaders//logging:ansi_colors.h"
    ] + select({
        "@makeheaders//compilation_mode:fastbuild": [
            "@makeheaders//logging:macros_debug.h"
        ],
        "//conditions:default": [
            "@makeheaders//logging:macros_ndebug.h"
        ]
    }),
    # ] + select({
    #     "//config/profile:dev?": [
    #         "//src:macros_debug.h",
    #     ],
    #     "//conditions:default":   [
    #         "//src:macros_ndebug.h",
    #     ]
    # }),
)
